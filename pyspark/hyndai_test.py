from pyspark.sql import SparkSession
import pyspark.sql.functions as functions
from pyspark.sql.connect.functions import row_number
from pyspark.sql.functions import col, explode, split, row_number, lit, unix_timestamp, to_date
from pyspark.sql.types import DateType
from pyspark.sql import Window

def window_functions():
    spark = SparkSession.builder.appName("Window_functions").getOrCreate()
    df = spark.createDataFrame([
        ["1","2025-01-01","2025-01-02",11]
        ,["1","2025-01-02","2025-01-03",12]
        ,["1", "2025-01-03","2025-01-04", 13]
        ,["1", "2025-01-04","2025-01-05", 14]
        ,["1", "2025-01-05","2025-01-06", 15]
        ,["1", "2025-01-06","2025-01-07", 16]
        ,["2", "2025-01-01","2025-01-02", 21]
        ,["2", "2025-01-02","2025-01-03", 22]
        ,["2", "2025-01-03","2025-01-04", 23]
        ,["2", "2025-01-04","2025-01-05", 24]
        ,["2", "2025-01-05","2025-01-06", 25]
        ,["2", "2025-01-06","2025-01-07", 26]
        ,["3", "2025-01-01","2025-01-02", 31]
        ,["3", "2025-01-02","2025-01-03", 32]
        ,["3", "2025-01-03","2025-01-04", 33]
        ,["3", "2025-01-04","2025-01-05", 34]
        ,["3", "2025-01-05","2025-01-06", 35]
        ,["3", "2025-01-06","2025-01-07", 36]
    ],["vin","start_date","end_date","trip"])
    print("df=")
    df.show()

    # adding 3 latest days sum of the trip
    df2 = df.withColumn("number", row_number().over(Window.partitionBy("vin").orderBy(functions.desc("start_date")))).filter(col("number")<4)
    print("df2=")
    df2.show()
    df3 = df2.groupBy("vin").sum("trip")
    print("df3=")
    df3.show()
    df4 = df.join(df3,"vin","inner")
    print("df4=")
    df4.show()

    # running total for 3 days window fpr each partition
    window = Window.partitionBy("vin").orderBy(col("start_date").desc()).rowsBetween(-2, Window.currentRow)
    df_trip_last_3_times = df.withColumn("trip3", functions.sum("trip").over(window))
    print("df_trip_last_3_times=")
    df_trip_last_3_times.show()

    # Calculates difference between end_date and start_date in minutes
    df_minutes = df.withColumn("minutes", (unix_timestamp(to_date(col("end_date"))) - unix_timestamp(to_date(col("start_date"))))/60)
    print("df_minutes=")
    df_minutes.show()

    # if I put order by VIN I get total value for the sum(trip) per VIN.  If I order by start_date, I get RUNNING TOTAL!
    df10 = df.withColumn("summa", functions.sum("trip").over(Window.partitionBy("vin").orderBy("start_date")))
    print("df10")
    df10.show()

window_functions()
"""
df=
+---+----------+----------+----+
|vin|start_date|  end_date|trip|
+---+----------+----------+----+
|  1|2025-01-01|2025-01-02|  11|
|  1|2025-01-02|2025-01-03|  12|
|  1|2025-01-03|2025-01-04|  13|
|  1|2025-01-04|2025-01-05|  14|
|  1|2025-01-05|2025-01-06|  15|
|  1|2025-01-06|2025-01-07|  16|
|  2|2025-01-01|2025-01-02|  21|
|  2|2025-01-02|2025-01-03|  22|
|  2|2025-01-03|2025-01-04|  23|
|  2|2025-01-04|2025-01-05|  24|
|  2|2025-01-05|2025-01-06|  25|
|  2|2025-01-06|2025-01-07|  26|
|  3|2025-01-01|2025-01-02|  31|
|  3|2025-01-02|2025-01-03|  32|
|  3|2025-01-03|2025-01-04|  33|
|  3|2025-01-04|2025-01-05|  34|
|  3|2025-01-05|2025-01-06|  35|
|  3|2025-01-06|2025-01-07|  36|
+---+----------+----------+----+

df2=
+---+----------+----------+----+------+
|vin|start_date|  end_date|trip|number|
+---+----------+----------+----+------+
|  1|2025-01-06|2025-01-07|  16|     1|
|  1|2025-01-05|2025-01-06|  15|     2|
|  1|2025-01-04|2025-01-05|  14|     3|
|  2|2025-01-06|2025-01-07|  26|     1|
|  2|2025-01-05|2025-01-06|  25|     2|
|  2|2025-01-04|2025-01-05|  24|     3|
|  3|2025-01-06|2025-01-07|  36|     1|
|  3|2025-01-05|2025-01-06|  35|     2|
|  3|2025-01-04|2025-01-05|  34|     3|
+---+----------+----------+----+------+

df3=
+---+---------+
|vin|sum(trip)|
+---+---------+
|  1|       45|
|  2|       75|
|  3|      105|
+---+---------+

df4=
+---+----------+----------+----+---------+
|vin|start_date|  end_date|trip|sum(trip)|
+---+----------+----------+----+---------+
|  1|2025-01-01|2025-01-02|  11|       45|
|  1|2025-01-02|2025-01-03|  12|       45|
|  1|2025-01-03|2025-01-04|  13|       45|
|  1|2025-01-04|2025-01-05|  14|       45|
|  1|2025-01-05|2025-01-06|  15|       45|
|  1|2025-01-06|2025-01-07|  16|       45|
|  2|2025-01-01|2025-01-02|  21|       75|
|  2|2025-01-02|2025-01-03|  22|       75|
|  2|2025-01-03|2025-01-04|  23|       75|
|  2|2025-01-04|2025-01-05|  24|       75|
|  2|2025-01-05|2025-01-06|  25|       75|
|  2|2025-01-06|2025-01-07|  26|       75|
|  3|2025-01-01|2025-01-02|  31|      105|
|  3|2025-01-02|2025-01-03|  32|      105|
|  3|2025-01-03|2025-01-04|  33|      105|
|  3|2025-01-04|2025-01-05|  34|      105|
|  3|2025-01-05|2025-01-06|  35|      105|
|  3|2025-01-06|2025-01-07|  36|      105|
+---+----------+----------+----+---------+

df_trip_last_3_times=
+---+----------+----------+----+-----+
|vin|start_date|  end_date|trip|trip3|
+---+----------+----------+----+-----+
|  1|2025-01-06|2025-01-07|  16|   16|
|  1|2025-01-05|2025-01-06|  15|   31|
|  1|2025-01-04|2025-01-05|  14|   45|
|  1|2025-01-03|2025-01-04|  13|   42|
|  1|2025-01-02|2025-01-03|  12|   39|
|  1|2025-01-01|2025-01-02|  11|   36|
|  2|2025-01-06|2025-01-07|  26|   26|
|  2|2025-01-05|2025-01-06|  25|   51|
|  2|2025-01-04|2025-01-05|  24|   75|
|  2|2025-01-03|2025-01-04|  23|   72|
|  2|2025-01-02|2025-01-03|  22|   69|
|  2|2025-01-01|2025-01-02|  21|   66|
|  3|2025-01-06|2025-01-07|  36|   36|
|  3|2025-01-05|2025-01-06|  35|   71|
|  3|2025-01-04|2025-01-05|  34|  105|
|  3|2025-01-03|2025-01-04|  33|  102|
|  3|2025-01-02|2025-01-03|  32|   99|
|  3|2025-01-01|2025-01-02|  31|   96|
+---+----------+----------+----+-----+

df_minutes=
+---+----------+----------+----+-------+
|vin|start_date|  end_date|trip|minutes|
+---+----------+----------+----+-------+
|  1|2025-01-01|2025-01-02|  11| 1440.0|
|  1|2025-01-02|2025-01-03|  12| 1440.0|
|  1|2025-01-03|2025-01-04|  13| 1440.0|
|  1|2025-01-04|2025-01-05|  14| 1440.0|
|  1|2025-01-05|2025-01-06|  15| 1440.0|
|  1|2025-01-06|2025-01-07|  16| 1440.0|
|  2|2025-01-01|2025-01-02|  21| 1440.0|
|  2|2025-01-02|2025-01-03|  22| 1440.0|
|  2|2025-01-03|2025-01-04|  23| 1440.0|
|  2|2025-01-04|2025-01-05|  24| 1440.0|
|  2|2025-01-05|2025-01-06|  25| 1440.0|
|  2|2025-01-06|2025-01-07|  26| 1440.0|
|  3|2025-01-01|2025-01-02|  31| 1440.0|
|  3|2025-01-02|2025-01-03|  32| 1440.0|
|  3|2025-01-03|2025-01-04|  33| 1440.0|
|  3|2025-01-04|2025-01-05|  34| 1440.0|
|  3|2025-01-05|2025-01-06|  35| 1440.0|
|  3|2025-01-06|2025-01-07|  36| 1440.0|
+---+----------+----------+----+-------+

# if I put order by VIN I get total value for the sum(trip) per VIN.  If I order by start_date, I get RUNNING TOTAL!
df10
+---+----------+----------+----+-----+
|vin|start_date|  end_date|trip|summa|
+---+----------+----------+----+-----+
|  1|2025-01-01|2025-01-02|  11|   11|
|  1|2025-01-02|2025-01-03|  12|   23|
|  1|2025-01-03|2025-01-04|  13|   36|
|  1|2025-01-04|2025-01-05|  14|   50|
|  1|2025-01-05|2025-01-06|  15|   65|
|  1|2025-01-06|2025-01-07|  16|   81|
|  2|2025-01-01|2025-01-02|  21|   21|
|  2|2025-01-02|2025-01-03|  22|   43|
|  2|2025-01-03|2025-01-04|  23|   66|
|  2|2025-01-04|2025-01-05|  24|   90|
|  2|2025-01-05|2025-01-06|  25|  115|
|  2|2025-01-06|2025-01-07|  26|  141|
|  3|2025-01-01|2025-01-02|  31|   31|
|  3|2025-01-02|2025-01-03|  32|   63|
|  3|2025-01-03|2025-01-04|  33|   96|
|  3|2025-01-04|2025-01-05|  34|  130|
|  3|2025-01-05|2025-01-06|  35|  165|
|  3|2025-01-06|2025-01-07|  36|  201|
+---+----------+----------+----+-----+
"""

def get_minutes_between_2_dates():
    from datetime import datetime
    date_format = "%Y-%m-%d %H:%M:%S"
    date_string1 = "2024-01-01 10:00:00"
    date_string2 = "2024-01-01 12:30:00"
    date_string2 = "2024-01-02 10:00:00"

    datetime1 = datetime.strptime(date_string1, date_format)
    datetime2 = datetime.strptime(date_string2, date_format)
    time_difference = datetime2 - datetime1
    minutes = time_difference.total_seconds() / 60
    print(minutes)

get_minutes_between_2_dates()
"""
1440.0
"""
